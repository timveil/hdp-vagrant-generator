#!/bin/sh

systemctl start ntpd

{{#logger}}updating hosts file{{/logger}}
sudo mv /tmp/install/hosts /etc/hosts
sudo chown root:root /etc/hosts

{{#logger}}updating hostname{{/logger}}
hostnamectl --static set-hostname {{arguments.hostname}}

{{#logger}}get ambari repo{{/logger}}
wget -nv {{ambariRepoFileUrl}} -O /etc/yum.repos.d/ambari.repo

{{#arguments.updateYum}}
{{#logger}}running yum update{{/logger}}
yum update -y && yum clean all
{{/arguments.updateYum}}

{{#logger}}running yum install{{/logger}}
yum install{{#arguments.kerberosEnabled}} rng-tools krb5-libs krb5-server krb5-workstation{{/arguments.kerberosEnabled}} ambari-server ambari-agent -y && yum clean all

{{#logger}}updating ambari-agent.ini{{/logger}}
sed -i "s/^hostname=localhost/hostname={{arguments.fqdn}}/g" /etc/ambari-agent/conf/ambari-agent.ini

{{#arguments.kerberosEnabled}}
{{#logger}}starting rngd to increase entropy for kdb5_util create{{/logger}}
systemctl start rngd
systemctl enable rngd

{{#logger}}updating kerberos config{{/logger}}
sudo mv /tmp/install/kadm5.acl /var/kerberos/krb5kdc/kadm5.acl
sudo chown root:root /var/kerberos/krb5kdc/kadm5.acl

sudo mv /tmp/install/kdc.conf /var/kerberos/krb5kdc/kdc.conf
sudo chown root:root /var/kerberos/krb5kdc/kdc.conf

sudo mv /tmp/install/krb5.conf /etc/krb5.conf
sudo chown root:root /etc/krb5.conf

{{#logger}}creating kerberos database{{/logger}}
kdb5_util create -s -P {{kdcPassword}}

{{#logger}}adding kerberos principal{{/logger}}
kadmin.local -q 'addprinc -pw {{kdcPassword}} {{kdcAdmin}}' -w {{kdcPassword}}

{{#logger}}starting kerberos services{{/logger}}
systemctl start krb5kdc
systemctl start kadmin
systemctl enable krb5kdc
systemctl enable kadmin
{{/arguments.kerberosEnabled}}

{{#logger}}running ambari setup{{/logger}}
ambari-server setup -s

{{#logger}}starting ambari server and agent{{/logger}}
ambari-server start
ambari-agent start

{{#logger}}sleep before calling ambari REST apis{{/logger}}
sleep 30

curl --silent --show-error -H "{{requestedBy}}" -X POST -d '@/tmp/install/blueprint.json' -u admin:admin {{createBlueprintUrl}}
{{#arguments.customRepoEnabled}}
curl --silent --show-error -H "{{requestedBy}}" -X PUT -d '@/tmp/install/create-hdp-repo.json' -u admin:admin {{createHdpRepositoryUrl}}
curl --silent --show-error -H "{{requestedBy}}" -X PUT -d '@/tmp/install/create-hdp-utils-repo.json' -u admin:admin {{createHdpUtilsRepositoryUrl}}
{{/arguments.customRepoEnabled}}
curl --silent --show-error -H "{{requestedBy}}" -X POST -d '@/tmp/install/create-cluster.json' -u admin:admin {{createClusterUrl}}

{{#logger}}sleep before checking progress{{/logger}}
sleep 30

PROGRESS=0
until [ $PROGRESS -eq 100 ]; do
    PROGRESS=`curl --silent --show-error -H "{{requestedBy}}" -X GET -u admin:admin {{createClusterStatusUrl}} 2>&1 | grep -oP '\"progress_percent\"\s+\:\s+\K[0-9]+'`
    TIMESTAMP=$(date "+%m/%d/%y %H:%M:%S")
    echo -ne "$TIMESTAMP - $PROGRESS percent complete!"\\r
    sleep 60
done

{{#logger}}adding users{{/logger}}
useradd -G hdfs admin
usermod -a -G users admin
usermod -a -G hadoop admin
usermod -a -G hive admin

usermod -a -G users vagrant
usermod -a -G hdfs vagrant
usermod -a -G hadoop vagrant
usermod -a -G hive vagrant

{{#logger}}doing some hdfs view stuff{{/logger}}
sudo su - hdfs << EOF
    hadoop fs -mkdir /user/admin
    hadoop fs -chown admin:hadoop /user/admin
EOF

{{#logger}}final yum cleanup{{/logger}}
yum clean all